//
// @description MIDI note modulation
// @version 1.0.0
// @author Shawn Bulen
// @about  Will add sin curve modulation per note based on input info...  Not all voices do that, so adds a little character to dull tones...  This particular script works on all selected takes/tracks.  Not required to be working within the MIDI Editor, but your MIDI notes need to be selected.
//

// Some vars & user prompts...
minccval = 10;
maxccval = 127;
timeinc = 60;     // Low numbers = more events; high numbers = fewer events...
freq = 1.5;       // Relative PER NOTE - this many cycles per note duration....
startphase = 0;   // Starting phase in degrees PER NOTE (not radians...)
controller = 11;
#retvals = "";

sprintf(#retvals, "%d,%d,%d,%f,%d,%d", minccval, maxccval, timeinc, freq, startphase, controller);
GetUserInputs("Insert Modulations", 6, "Min CC value, Max CC value, Time increment, Frequency, Start phase - 999=random, Controller", #retvals);

match("%d,%d,%d,%f,%d,%d", #retvals, minccval, maxccval, timeinc, freq, startphase, controller);

// A little helpful math for later...
range = abs(maxccval - minccval);
offset = startphase * 2.0 * $pi / 360.0; // offset in radians
startphase == 999 ? offset = rand(2 * $pi); // 999=random

Undo_BeginBlock();

// Get the list of selected MIDI notes
// Loop thru MediaItems, then Takes, then Notes
numItems = CountMediaItems(0);

itemidx = 0;
loop (numItems,
  item = GetMediaItem(0, itemidx);
  IsMediaItemSelected(item) ? (
    numTakes = GetMediaItemNumTakes(item);

    takeidx = 0;
    loop (numTakes,
      lastpos = 0;
      take = GetMediaItemTake(item, takeidx);
      MIDI_DisableSort(take);

      noteidx = MIDI_EnumSelNotes(take, -1);
      while (noteidx != -1) (
        MIDI_GetNote(take, noteidx, selected, muted, startppqpos, endppqpos, chan, pitch, vel);
        len = endppqpos - startppqpos;

        // Try & handle overlapping notes somewhat gracefully...
        ((selected == 1) && (startppqpos >= lastpos)) ? (

          // Loop thru adding CCs approximating a sin curve...
          currpos = 0;
          startphase == 999 ? offset = rand(2 * $pi); // 999=random
          while (currpos <= len) (
            // The heart of the beast...
            angle = (currpos / len) * 2 * $pi * freq;
            ccval = minccval + floor(range * ((sin(offset + angle) + 1.0) / 2.0));
            MIDI_InsertCC(take, selected, muted, currpos + startppqpos, 0xB0, chan, controller, ccval);

            // Set shape on the ramp CC event; need to find last event inserted...
            // Always using linear here, approximating a sin with lots of lines...
            MIDI_CountEvts(take, notecnt, ccevtcnt, textsyxevtcnt);
            MIDI_SetCCShape(take, ccevtcnt - 1, 1, 0, true);

            currpos += timeinc;
          );  // per timeinc
          lastpos = endppqpos;
        );  // no overlap

        noteidx = MIDI_EnumSelNotes(take, noteidx);
      );  // per selected note

      MIDI_SORT(take);
      takeidx += 1;
    );  // per take
  );  // is item selected
  itemidx += 1;
);  // per item

Undo_EndBlock("Sin Modulation", 0);

